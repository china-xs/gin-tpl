syntax = "proto3";

package api.auth;

import "google/api/annotations.proto"; // http proto 包 path third_party
import "protoc-gen-openapiv2/options/annotations.proto";// swagger proto 包 path third_party
import "validate/validate.proto";// validate proto 数据校验规则包
import "google/protobuf/timestamp.proto";

option go_package = "github.com/china-xs/gin-tpl/examples/blog/api/auth;v1";
option java_multiple_files = true;
option java_package = "api.auth";

service Login {
	rpc GetToken(GetTokenRequest) returns(GetTokenReply){
		option (google.api.http) = {//主要作用定义http 路由
			post: "/auth/v1/login",//访问接口路由
			body: "*",//请求方式
		};
		option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
			description: "";// 备注
			summary: "登陆接口";// 标题
			tags: "登陆管理";// 分类
		};
	};
	rpc GetInfo(GetInfoRequest) returns (GetInfoReply){
		option (google.api.http) = {//主要作用定义http 路由
			get: "/auth/v1/login/{id}",//访问接口路由
		};
		option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
			description: "";// 备注
			summary: "get测试";// 标题
			tags: "登陆管理";// 分类
		};
	}
}

message GetInfoRequest{
	// @gotags: uri:"id" form:"id"
	int32  id = 1;
	// @gotags: form:"username" uri:"username"
	string username = 2;

}
message GetInfoReply{

}


message GetTokenRequest{
	// @gotags: form:"username" uri:"username"
	string username = 1[
		(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
			description: "登陆用户名称"
		},
		(validate.rules).string = {
			min_bytes:2,// 长度要求带有校验、当前暂不支持直接修改错误信息
			max_bytes:128,
		}

	];
	// @gotags: form:"password" uri:"username"
	string password = 2[
		(validate.rules).string = {
//			ignore_empty:true,
			min_bytes:2,// 长度要求带有校验、当前暂不支持直接修改错误信息
			max_bytes:128,
		}
	];
	int32 id = 3[
		(validate.rules).int32={
			gte: 18
		}
	];

	string cd = 4[
		(validate.rules).string={
			len_bytes:100,
		}
	];
	string urls = 5[
		(validate.rules).string={
			ip:true,
		}
	];

}

message GetTokenReply{
	string token = 1[
		(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
			description: "用户令牌",
		}
	];
	string tokenType = 2[
		(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
			description: "令牌类型 default:Bearer",
		}
	];
	google.protobuf.Timestamp expiresAt = 3[
		(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
			description: "令牌到期时间",
		}
	];
}

