// Code generated by protoc-gen-go-gin. DO NOT EDIT.
// versions:v1.0.1
// protoc-gen-go-gin v1.0.1

package auth

import (
	context "context"
	gin_tpl "github.com/china-xs/gin-tpl"
	gin "github.com/gin-gonic/gin"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the kratos package it is being compiled against.
// gin.context.gin_tpl.
type LoginGinServer interface {
	GetToken(context.Context, *GetTokenRequest) (*GetTokenReply, error)
}

func RegisterLoginGinServer(s *gin_tpl.Server, srv LoginGinServer, ms ...gin.HandlerFunc) {
	route := s.Engine.Use(ms...)
	route.POST("/auth/v1/login", _Login_GetToken0_Gin_Handler(s, srv))
}

func _Login_GetToken0_Gin_Handler(s *gin_tpl.Server, srv LoginGinServer) func(c *gin.Context) {
	return func(c *gin.Context) {
		var in GetTokenRequest
		if err := c.ShouldBindJSON(&in); err != nil {
			return
		}
		out, err := srv.GetToken(c, &in)
		s.Enc(c, out, err)
		return
		//reply := out.(*GetTokenReply)
		//return ctx.Result(200, reply)
	}
}
